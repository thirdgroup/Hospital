# Generated by Django 2.1 on 2019-05-08 08:08

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('real_name', models.CharField(max_length=20, verbose_name='真实姓名')),
                ('mobile', models.CharField(max_length=11, verbose_name='手机号')),
                ('status', models.BooleanField(default=True, verbose_name='状态,默认启用')),
                ('user_secret', models.UUIDField(default=uuid.UUID('ee021849-fbd3-4554-a611-82f2d32d83de'), verbose_name='用户jwt加密')),
            ],
            options={
                'verbose_name': '用户',
                'db_table': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Admission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nurse', models.CharField(max_length=20, verbose_name='护理')),
                ('bed_id', models.CharField(max_length=10, verbose_name='床位号')),
                ('pay_deposit', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='缴费押金')),
                ('hospital_stays', models.DateTimeField(null=True, verbose_name='住院时间')),
                ('state_illness', models.TextField(verbose_name='病情')),
                ('balance', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='余额')),
            ],
            options={
                'verbose_name': '住院办理',
                'db_table': 'admission',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department_name', models.CharField(max_length=20, verbose_name='科室名字')),
            ],
            options={
                'verbose_name': '科室',
                'db_table': 'department',
            },
        ),
        migrations.CreateModel(
            name='Dispensing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drug_number', models.PositiveSmallIntegerField(verbose_name='发药数量')),
                ('issued_number', models.PositiveSmallIntegerField(verbose_name='已发数量')),
                ('not_issued_number', models.PositiveSmallIntegerField(verbose_name='未发数量')),
            ],
            options={
                'verbose_name': '发药管理',
                'db_table': 'dispensing',
            },
        ),
        migrations.CreateModel(
            name='DoctorManage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('real_name', models.CharField(max_length=20, verbose_name='真实姓名')),
                ('id_number', models.CharField(max_length=18, verbose_name='身份证')),
                ('mobile', models.CharField(max_length=11, verbose_name='手机号')),
                ('phone', models.CharField(max_length=11, null=True, verbose_name='座机')),
                ('sex', models.BooleanField(default=True, verbose_name='性别')),
                ('birthday', models.DateField(verbose_name='出生年月')),
                ('age', models.PositiveSmallIntegerField(verbose_name='年龄')),
                ('email', models.EmailField(max_length=254, null=True, verbose_name='电子邮箱')),
                ('education', models.PositiveSmallIntegerField(choices=[(1, '大专'), (2, '本科'), (3, '高中'), (4, '硕士')], null=True, verbose_name='学历')),
                ('remark', models.CharField(max_length=100, null=True, verbose_name='备注')),
                ('is_delete', models.BooleanField(default=False, verbose_name='是否删除，默认False')),
                ('admission_time', models.DateTimeField(null=True, verbose_name='入院时间')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctormanage', to='database.Department', verbose_name='科室管理')),
            ],
            options={
                'verbose_name': '门诊医生信息',
                'db_table': 'doctormanage',
            },
        ),
        migrations.CreateModel(
            name='Drug',
            fields=[
                ('drug_number', models.CharField(max_length=20, primary_key=True, serialize=False, unique=True, verbose_name='药品编号')),
                ('drug_image', models.ImageField(upload_to='drug_image/', verbose_name='药品图片')),
                ('purcha_price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='药品进价')),
                ('selling_price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='药品售价')),
                ('drug_name', models.CharField(max_length=100, verbose_name='药品名称')),
                ('drug_type', models.PositiveSmallIntegerField(choices=[(1, '处方药'), (2, '中药'), (3, '西药')], default=1, verbose_name='药品类型')),
                ('drug_descrip', models.CharField(max_length=50, null=True, verbose_name='药品简介')),
                ('expire_date', models.PositiveSmallIntegerField(verbose_name='保质期')),
                ('drug_describe', models.TextField(verbose_name='药品描述')),
                ('manufacturer', models.CharField(max_length=50, null=True, verbose_name='生产厂商')),
                ('use_instructions', models.CharField(max_length=50, verbose_name='服用说明')),
                ('drug_remark', models.CharField(max_length=200, verbose_name='备注')),
                ('drug_status', models.PositiveSmallIntegerField(choices=[(1, '销售中'), (2, '已售空')], default=1, verbose_name='销售状态')),
                ('surplus', models.PositiveIntegerField(verbose_name='剩余量')),
                ('inventory', models.PositiveIntegerField(verbose_name='库存')),
            ],
            options={
                'verbose_name': '药品管理',
                'db_table': 'drug',
            },
        ),
        migrations.CreateModel(
            name='PayItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=50, verbose_name='项目名称')),
                ('charge_amount', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='收费金额')),
            ],
            options={
                'verbose_name': '项目收费',
                'db_table': 'payitems',
            },
        ),
        migrations.CreateModel(
            name='RegisterItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('pay_items', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.PayItems', verbose_name='关联收费项目')),
            ],
            options={
                'verbose_name': '收费项目登记',
                'db_table': 'registeritems',
            },
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='患者姓名')),
                ('id_number', models.CharField(max_length=18, verbose_name='患者身份证')),
                ('phone', models.CharField(max_length=11, verbose_name='联系电话')),
                ('sex', models.BooleanField(default=1, verbose_name='性别')),
                ('age', models.PositiveSmallIntegerField(null=True, verbose_name='年龄')),
                ('social_num', models.CharField(max_length=10, null=True, verbose_name='社保号')),
                ('occupation', models.CharField(max_length=20, null=True, verbose_name='职业')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='挂号费')),
                ('is_paying', models.BooleanField(default=True, verbose_name='是否自费')),
                ('is_first', models.BooleanField(default=1, verbose_name='是否是初诊')),
                ('regist_date', models.DateTimeField(auto_now_add=True, verbose_name='挂号时间')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, '已住院'), (2, '已出院'), (3, '已结算'), (4, '未结算'), (5, '已挂号'), (6, '已退号')], verbose_name='患者挂号状态')),
                ('remark', models.CharField(max_length=100, null=True, verbose_name='备注')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='database.DoctorManage', verbose_name='关联医生信息')),
            ],
            options={
                'verbose_name': '患者挂号信息',
                'db_table': 'registration',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('group_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.Group')),
                ('status', models.BooleanField(default=True, verbose_name='状态，默认启用')),
                ('is_delete', models.BooleanField(default=False, verbose_name='是否删除，默认False')),
            ],
            options={
                'verbose_name': '角色',
                'db_table': 'role',
            },
            bases=('auth.group',),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.AddField(
            model_name='registeritems',
            name='registration',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Registration', verbose_name='关联患者挂号信息'),
        ),
        migrations.AddField(
            model_name='dispensing',
            name='registration',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='database.Registration', verbose_name='关联患者'),
        ),
        migrations.AddField(
            model_name='dispensing',
            name='responsible_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='负责人'),
        ),
        migrations.AddField(
            model_name='admission',
            name='registration',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='database.Registration', verbose_name='病人挂号'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
